<?php

namespace {{ namespace }};

use Illuminate\Auth\Access\Response;
use {{ namespacedModel }};
use {{ namespacedUserModel }};
use Illuminate\Auth\Access\HandlesAuthorization;
use Illuminate\Auth\Access\Response;

class {{ class }}
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny({{ user }} $user): bool
    {
        // Any authenticated user can view any {{ modelVariable }}
        return $user->isAuthenticated();
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        // User can view a {{ modelVariable }} if they are the assigned representative
        return $user->id === ${{ modelVariable }}->user_id;
    }

    /**
     * Determine whether the user can create models.
     */
    public function create({{ user }} $user): bool
    {
        // Only users with 'create_{{ modelVariable }}' ability can create a {{ modelVariable }}
        return $user->can('create_{{ modelVariable }}');
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        // User can update a {{ modelVariable }} if they are the assigned representative
        return $user->id === ${{ modelVariable }}->user_id;
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        // User can delete a {{ modelVariable }} if they are an admin
        return $user->isAdmin();
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        // User can restore a {{ modelVariable }} if they are an admin
        return $user->isAdmin();
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete({{ user }} $user, {{ model }} ${{ modelVariable }}): bool
    {
        // User can force delete a {{ modelVariable }} if they are a super admin
        return $user->isSuperAdmin();
    }
}
